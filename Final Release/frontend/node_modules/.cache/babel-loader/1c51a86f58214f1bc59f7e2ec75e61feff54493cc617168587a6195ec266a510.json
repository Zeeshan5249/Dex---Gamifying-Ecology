{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\William\\\\Desktop\\\\UniFiles\\\\USYD\\\\2024-Semester2\\\\Java Application Frameworks\\\\Mon-09-12-Lab-Group-3-5\\\\frontend\\\\src\\\\pages\\\\processes\\\\processes.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport './processes.css';\nimport Template from '../template/template';\nimport Button from '../../generic/button/button';\nimport LoadingBar from '../../generic/loading_bar/loading_bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Process = props => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const base64data = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.base64data;\n  const unauthorised_token_procedure = () => {\n    sessionStorage.setItem('token', null);\n    navigate(\"/login\", {\n      default_error: \"unauthorized token\"\n    });\n  };\n  const upload_image = (token, image) => {\n    fetch('http://localhost:8080/api/performScan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'token': token,\n        'image': image\n      })\n    }).then(response => {\n      const status = response.status;\n      return response.text().then(body => {\n        return {\n          status,\n          body\n        };\n      });\n    }).then(({\n      status,\n      body\n    }) => {\n      if (status == 401) {\n        unauthorised_token_procedure();\n      }\n    });\n  };\n  useEffect(() => {\n    if (base64data != null) {\n      upload_image(sessionStorage.getItem('token'), base64data);\n    } //        <p>Scan  New  Entry</p>\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"processor_bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loading_bar_wpr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"loading_bar_title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"PROCESSING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"loading_bar_component\",\n          children: /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Process, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Process;\nexport default Process;\nvar _c;\n$RefreshReg$(_c, \"Process\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useLocation","Template","Button","LoadingBar","jsxDEV","_jsxDEV","Process","props","_s","_location$state","navigate","location","base64data","state","unauthorised_token_procedure","sessionStorage","setItem","default_error","upload_image","token","image","fetch","method","headers","body","JSON","stringify","then","response","status","text","getItem","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/William/Desktop/UniFiles/USYD/2024-Semester2/Java Application Frameworks/Mon-09-12-Lab-Group-3-5/frontend/src/pages/processes/processes.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {useNavigate, useLocation} from \"react-router-dom\";\n\nimport './processes.css';\n\nimport Template from '../template/template';\nimport Button from '../../generic/button/button';\nimport LoadingBar from '../../generic/loading_bar/loading_bar';\n\nconst Process = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const base64data = location.state?.base64data;\n\n  const unauthorised_token_procedure = () => {\n    sessionStorage.setItem('token', null);\n    navigate(\"/login\", {default_error: \"unauthorized token\"});\n  };\n\n  const upload_image = (token, image) => {\n    fetch('http://localhost:8080/api/performScan', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        'token': token,\n        'image': image\n      })\n    }).then((response) => {\n      const status = response.status;\n      return response.text().then((body) => {\n        return { status, body };\n      });\n    }).then(({ status, body }) => {\n      if (status == 401) {\n        unauthorised_token_procedure();\n      }\n    })\n  };\n\n  useEffect(() => {\n    if (base64data != null) {\n      upload_image(sessionStorage.getItem('token'), base64data);\n    } //        <p>Scan  New  Entry</p>\n  }, []);\n  \n  return (\n    <Template> \n      <div class='processor_bar'>\n        \n        \n        <div class='loading_bar_wpr'>\n          <div class='loading_bar_title'>\n            <p>PROCESSING</p>\n          </div>\n          <div class='loading_bar_component'>\n            <LoadingBar />\n          </div>\n        </div>\n        \n\n      </div>\n    </Template>\n  );\n}\n\nexport default Process;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}